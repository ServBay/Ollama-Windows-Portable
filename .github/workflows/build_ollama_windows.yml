name: Build Ollama for Windows

on:
  workflow_dispatch:
    inputs:
      ollama_version:
        description: 'The Ollama version to build (e.g., 0.1.43). The workflow will checkout tag v<version>.'
        required: true
        type: string

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Set up Go environment
        uses: actions/setup-go@v5
        with:
          go-version: '^1.22'

      - name: Checkout Ollama source code
        uses: actions/checkout@v4
        with:
          repository: ollama/ollama
          ref: v${{ inputs.ollama_version }}

      - name: Build Ollama binary
        shell: pwsh
        env:
        #   CGO_ENABLED: 0
          GOOS: windows
          GOARCH: amd64
        run: |
          $outputFile = "ollama.exe"
          $versionString = "${{ inputs.ollama_version }} (ServBay)"
          $ldflags = "-s -w -X 'github.com/ollama/ollama/version.Version=$versionString' -X 'github.com/ollama/ollama/server.mode=release'"
          
          Write-Host "Starting build for Ollama version: ${{ inputs.ollama_version }}"
          Write-Host "Output file: $outputFile"
          Write-Host "Using ldflags: $ldflags"
          
          go build -o $outputFile -ldflags="$ldflags" .
          
          Write-Host "Build completed."

      - name: Verify build output
        shell: pwsh
        run: |
          if (-not (Test-Path ./ollama.exe)) {
            Write-Error "Build failed: ollama.exe not found!"
            exit 1
          }
          Write-Host "ollama.exe found. Checking version..."
          ./ollama.exe --version

      - name: Package the binary into a ZIP file
        id: package
        shell: pwsh
        run: |
          $zipFileName = "ollama-${{ inputs.ollama_version }}-win-x64.zip"
          $zipFilePath = "${{ github.workspace }}/$zipFileName"

          Compress-Archive -Path ollama.exe -DestinationPath $zipFilePath
          Write-Host "Created ZIP package: $zipFileName"
          
          echo "ZIP_FILE_NAME=$zipFileName" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          echo "ZIP_FILE_PATH=$zipFilePath" | Out-File -FilePath $env:GITHUB_OUTPUT -Append

      - name: Create GitHub Release and Upload Asset
        uses: softprops/action-gh-release@v2
        if: success()
        with:
          tag_name: v${{ inputs.ollama_version }}
          name: Ollama ${{ inputs.ollama_version }} for Windows x64 (ServBay Build)
          body: |
            This is a custom build of Ollama **v${{ inputs.ollama_version }}** for Windows x64.

          draft: false
          prerelease: false
          files: ${{ steps.package.outputs.ZIP_FILE_PATH }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}